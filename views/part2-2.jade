section
    h1 CSS 實踐技巧
    ul
        li 精簡寫法
        li Specificity
        li 跨平台問題
        li Selector Best Practices
        li 使用 preprocessor
        li 好用資源介紹
section
    section
        h3 精簡寫法
        ul
            li 顏色
            li 長度單位（length）
            li 規則合併
    section
        h4 顏色
        ul
            li
                | 網頁使用
                span.color-red R
                span(style="color:green;") G
                span(style="color:blue;") B
                |  256 位元色系
            li
                | 常見的兩種寫法：
                ol
                    li
                        | 16進位：
                        code #337ab7
                        |  （大小寫均可，但
                        a(href="http://www.websiteoptimization.com/speed/tweak/lowercase", target="_blank"): b 建議使用小寫
                        | ）
                    li
                        | 10進位：
                        code rgb(51, 122, 183)
            li 進一步精簡：#ff00bb 可縮寫成 #f0b
    section
        h4 length
        ul
            li CSS 的 length 有很多種單位：px, em, %
            li
                | 數值為零的話可省略單位，例如&nbsp;
                code margin: 0px;
                |  和&nbsp;
                code margin: 0;
                |  相同
            li
                | 小數點前面為零的話可省略，例如&nbsp;
                code opacity: 0.7;
                |  和&nbsp;
                code opacity: .7;
                |  相同
    section
        h4 規則合併：margin &amp; padding
        table(style="font-size:70%;"): tbody
            tr
                td: code margin: 10px;
                td: table.no-border: tbody
                    tr
                        td
                        td 10px
                        td
                    tr
                        td 10px
                        td(style="background:blue;")
                        td 10px
                    tr
                        td
                        td 10px
                        td
            tr
                td: code
                    | margin: 10px
                    span.color-red  5px
                    | ;
                td: table.no-border: tbody
                    tr
                        td
                        td 10px
                        td
                    tr
                        td.color-red 5px
                        td(style="background:blue;")
                        td.color-red 5px
                    tr
                        td
                        td 10px
                        td
            tr
                td: code
                        | margin: 10px
                        span.color-red  5px
                        span.color-green  8px
                        | ;
                td: table.no-border: tbody
                    tr
                        td
                        td 10px
                        td
                    tr
                        td.color-red 5px
                        td(style="background:blue;")
                        td.color-red 5px
                    tr
                        td
                        td.color-green 8px
                        td
            tr
                td: code
                        | margin: 10px
                        span.color-red  0
                        span.color-green  8px
                        span.color-yellow  5px
                        | ;
                td: table.no-border: tbody
                    tr
                        td
                        td 10px
                        td
                    tr
                        td.color-yellow 5px
                        td(style="background:blue;")
                        td.color-red 0px
                    tr
                        td
                        td.color-green 8px
                        td

section
    h3 CSS Specificity
    section
        p 當兩個規則打架時，如何決定該採用哪一個？
        pre: code
            | a {
            |   color: #00f;
            | }
            | &nbsp;
            | a.active {
            |   color: #f00;
            | }
    section
        p 數個數
        table(style="font-size:50%;")
            thead: tr
                th
                th Inline style
                th ID
                th Class &amp; pseudo class
                th Tag name &amp; pseudo element
            tbody
                tr
                    td 範例
                    td(style="width:12em;"): pre: code &lt;a style="color:#f00;"&gt;
                    td
                        code #header
                        | ,&nbsp;
                        code #section1
                    td
                        code .active
                        | ,&nbsp;
                        code :hover
                    td
                        code div
                        | ,&nbsp;
                        code ::before
                tr
                    td 分數比重
                    td 1000
                    td 100
                    td 10
                    td 1
    section
        p 計算加權分數：
        ul
            li
                | 例一：
                br
                code a.active
                br
                |  有 1 個 element、1 個 class，分數為 1 * 1 + 1 * 10 = 11
            li
                | 例二：
                br
                code .bs-docs-nav .navbar-nav&gt;li&gt;a:hover
                br
                |  有 2 個 element、2 個 class、1 個 pseudo class，分數為 2 * 1 + (2+1) * 10 = 32
    section
        ul
            li
                | 分數一樣的話，依照網頁的讀取順序，
                b 新的
                | 規則會把舊的規則覆蓋掉
            li 當某個規則（例如 color）沒被宣告時，則參考母元素的規則

section
    section
        h3 跨平台問題
        ul
            li HTML5 Vendor Prefix
            li IE 相關問題
            li 解決方案
    section
        h3 Vendor Prefix
        ul(style="font-size:90%;")
            //- li 由於各家瀏覽器對 W3C 標準的實作差異，同一份 CSS 的呈現結果會不太一樣
            li
                | 新的 HTML5 規格未定前（2014.10 以前），各家瀏覽器只支援各自的 CSS 規則：
                ul
                    li transition &xrarr; -webkit-transition, -moz-transition, -o-transition, -ms-transition
                    li border-radius &xrarr; -webkit-border-radius, -moz-border-radius
            li 也就是說，一個規則要寫三到五次（各種 prefix 再加個無 prefix 的版本）
            li
                | 前綴的字樣稱為 vendor prefix
                ul
                    li -webkit- 代表使用 WebKit 為核心的 Chrome、Safari
                    li -moz- 代表 Mozilla 出品的 Firefox
                    li -o- 代表 Opera
                    li -ms- 代表 Microsoft 的 IE9 ~ Edge
            li 在可見的未來，這些 vendor prefix 再也可以不用自己加&hellip;
    section
        h3 Internet Explorer
        ul
            li 由於早期 IE 很少遵守 W3C 規範行事，因此和其他平台的相容性非常低
            li: a(href="https://zh.wikipedia.org/wiki/Acid3", target="_blank") Acid3 測試結果
            li IE10 以後的相容性已大幅改善，但若需要支援 IE9 以前的版本則需要極高的心力
    section
        h3 跨平台問題的解決方案
        ul
            li 預先確定好此次撰寫的網頁的平台支援度
            li 鎖定主流平台測試，再補強其他平台（progressive enhancement）
            li Server 端使用 user agent 判斷瀏覽器類型，再使用 Polyfill

section
    h3 Selector 該如何寫好？
    ul
        li 在大型專案中，很容易會將 CSS 越寫越複雜
        li 分數越高的規則需要用更高分數的規則覆蓋，因此 HTML 跑出更多 class、更多 ID，產生惡性循環
        li 太多互相覆蓋的規則造成 debug、需求修改困難 (tight coupling)
section
    h3 Some Best Practices
    section
        p 從 HTML 結構開始思考
        ul
            li 規劃頁面時，以 HTML 結構為主，搭配 CSS 輔助，避免交付 CSS 太多可以在 HTML 就做好的事情
            li 避免單一化的 HTML 結構，例如所有東西都用 div 進行排版
            li 考慮元素本身的語意（semantics）進行頁面構築，例如避免將標題、內文都用 p 元素
    section
        p 撰寫 selector 時，考慮頁面架構來設計 selector
        p Bad example:
        div(style="float:left;width:50%;"): pre: code.html
            | &lt;article class="item"&gt;
            |   &lt;header class="item-header"&gt;
            |     &lt;h1 class="item-title"&gt;人氣商品特價拍賣中&lt;/h1&gt;
            |   &lt;/header&gt;
            | &lt;/article&gt;
        div(style="float:left;width:50%;"): pre: code
            | .item .item-header .item-title {
            |   color: #343435;
            |   margin-top: 25px;
            | }
    section
        p Good example:
        div(style="float:left;width:50%;"): pre: code
            | &lt;article class="item"&gt;
            |   &lt;header&gt;
            |     &lt;h1&gt;人氣商品特價拍賣中&lt;/h1&gt;
            |   &lt;/header&gt;
            | &lt;/article&gt;
        div(style="float:left;width:50%;"): pre: code
            | .item h1 {
            |   color: #343435;
            |   margin-top: 25px;
            | }
        ul
            li
                code .item h1
                |  本身
                span.color-red 直接意味著
                | 要選擇&nbsp;
                code .item
                |  裡面的大標題，因此不需要多餘的 class 作為輔助
    section
        p 避免太複雜的疊床架屋
        ul(style="font-size:90%;")
            li 當 selector 內出現四個或以上數量的元素時，就該考慮進行重構（refactor）
            li 避免使用 inline style，因為他們難以追蹤又無法覆蓋
            li
                span.color-red 不要
                | 在 selector 裡面出現 ID
                ul
                    li ID 是讓 JS 方便進行 DOM 操作、以及和 URL fragment 配合
                    li 特例：CSS namespacing
            li
                | 通常權重過高的 selector 是用來
                b 處理特殊狀況（edge case）
                ul
                    li 意即，當有多個元件的樣式相同、但有少數元件有特別的樣式呈現時，針對這些特別樣式再撰寫更高的 selector 進行覆蓋
                    li 例如先前的 a 和 a.active
    section
        p 抽取共通的規則出去成為新的 selector
        ul
            li 若發現很多重複的規則出現在不同的 selector 裡面，可以考慮抽取出來用新的 class 代表
            li 這就是 CSS Library 撰寫的思維（component based CSS）
            li 也可以用 helper class 去思考，例如常見的 .pull-left、.clearfix 等
            li: a(href="http://getbootstrap.com/css/#buttons-options", target="_blank") 以 Bootstrap 按鈕為例
    section
        p 其他方法
        ul
            li 進入 CSS preprocessor 的世界
            li
                | 使用&nbsp;
                a(href="https://css-tricks.com/bem-101/", target="_blank") BEM Methodology
                |  對 class 名稱正規化
            li
                | 對 webpack 生態系熟悉的下一步：
                a(href="http://glenmaddern.com/articles/css-modules", target="_blank") CSS Modules
section
    section
        h2 CSS Preprocessor
        ul
            li 類似 CSS 的程式語言，但他們可以 compile 成 CSS
            li 常見的有 LESS、Sass、SCSS、Stylus
            li 可以使用巢狀結構、定義變數、導入（import）其他文件，就像真正的程式語言一樣
            li.color-red 可大幅簡化 CSS 撰寫困難度！
    section
        h3 Example (LESS.js)
        p 搭配 lesshat 同時做到跨平台
        table
            div(style="float:left;width:50%;")
                | LESS
                pre: code
                    | @import "lesshat.less";
                    | &nbsp;
                    | @active-color: #337ab7;
                    | &nbsp;
                    | a {
                    |   color: black;
                    |   background-color: transparent;
                    |   .transition(color .3s linear, background-color .3s ease);
                    | &nbsp;
                    |   &amp;.active, &amp;:hover {
                    |     color: @active-color;
                    |     background-color: fadeout(@active-color, 50%);
                    |   }
                    | }
            div(style="float:left;width:50%;")
                | CSS
                pre: code
                    | a {
                    |   color: black;
                    |   background: transparent;
                    |   -webkit-transition: color .3s  linear, background-color .3s ease;
                    |   -moz-transition: color .3s  linear, background-color .3s ease;
                    |   -o-transition: color .3s  linear, background-color .3s ease;
                    |   transition: color .3s  linear, background-color .3s ease;
                    | }
                    | &nbsp;
                    | a.active, a:hover {
                    |   color: #337ab7;
                    |   background: rgba(51, 122, 183, .5);
                    | }

section
    h3 好用資源介紹
    ul
        li
            a(href="https://developer.mozilla.org", target="_blank") MDN
            | : 非常完整、精確的 HTML、CSS、JS 參考資源
        li
            a(href="http://caniuse.com", target="_blank") caniuse
            | : 列出各種 HTML5 功能的跨平台支援度
        li
            a(href="https://www.w3.org", target="_blank") W3C
            | : 身為源頭的標準定義文件，但易讀性較低
        li
            a(href="https://css-tricks.com", target="_blank") CSS-Tricks
            | : 神人常出沒分享奇招的前端技術網站
